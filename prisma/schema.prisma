generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int      @id @default(autoincrement())
  name             String   @db.VarChar(255)
  email            String   @unique(map: "User_email_key") @db.VarChar(255)
  password         String   @unique(map: "User_password_key") @db.VarChar(255)
  roleId           Int      @default(2)
  role             Role     @relation(fields: [roleId], references: [id])
  adress           String?  @db.VarChar(255)
  verificationCode String?  @db.VarChar(255)
  isVerified       Boolean  @default(false)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  // Relation to Student (optional)
  student Student?
}

model Student {
  id         Int      @id @default(autoincrement())
  userId     Int      @unique
  user       User     @relation(fields: [userId], references: [id])
  gradeLevel String   @db.VarChar(255)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  attendances Attendance[]
}

model Attendance {
  id        Int      @id @default(autoincrement())
  studentId Int
  student   Student  @relation(fields: [studentId], references: [id])
  date      DateTime @default(now())
  status    String   @db.VarChar(10) // "PRESENT" or "ABSENT"
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Role {
  id          Int     @id @default(autoincrement())
  name        String  @unique @db.VarChar(50) // e.g., "ADMIN", "CUSTOMER", "MANAGER"
  description String? @db.VarChar(255) // Optional description of the role
  users       User[]
}
